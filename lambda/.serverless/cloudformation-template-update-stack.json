{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "SourceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/event-filter-dev-source"
      }
    },
    "StatusLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/event-filter-dev-status"
      }
    },
    "CronLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/event-filter-dev-cron"
      }
    },
    "SourceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/event-filter/dev/1639099470296-2021-12-10T01:24:30.296Z/event-filter.zip"
        },
        "Handler": "handler_bd.source_handler",
        "Runtime": "python3.8",
        "FunctionName": "event-filter-dev-source",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/LabRole"
        }
      },
      "DependsOn": [
        "SourceLogGroup"
      ]
    },
    "StatusLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/event-filter/dev/1639099470296-2021-12-10T01:24:30.296Z/event-filter.zip"
        },
        "Handler": "handler_sqs.detail_handler",
        "Runtime": "python3.8",
        "FunctionName": "event-filter-dev-status",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/LabRole"
        }
      },
      "DependsOn": [
        "StatusLogGroup"
      ]
    },
    "CronLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/event-filter/dev/1639099470296-2021-12-10T01:24:30.296Z/event-filter.zip"
        },
        "Handler": "handler_sqs.update_handler",
        "Runtime": "python3.8",
        "FunctionName": "event-filter-dev-cron",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/LabRole"
        }
      },
      "DependsOn": [
        "CronLogGroup"
      ]
    },
    "SourceLambdaVersionUal2kVOXr4ofWW5bixS1D5SDK1zixivYzMHlYjMgd2Q": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SourceLambdaFunction"
        },
        "CodeSha256": "XeoQx/zpla+Wz2g3tecke0jRPc04302rTzsGkaYIiG0="
      }
    },
    "StatusLambdaVersionsPDQGjZkvxhL68Ft2LHKQUCIJJfc7G5VCj5cBhXlHGc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StatusLambdaFunction"
        },
        "CodeSha256": "XeoQx/zpla+Wz2g3tecke0jRPc04302rTzsGkaYIiG0="
      }
    },
    "CronLambdaVersionui83lz85Ys6bZ719kfqPHp00W67pPHFUNe8vaMruCZ4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CronLambdaFunction"
        },
        "CodeSha256": "XeoQx/zpla+Wz2g3tecke0jRPc04302rTzsGkaYIiG0="
      }
    },
    "CronEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "cron(0/1 * * * ? *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CronLambdaFunction",
                "Arn"
              ]
            },
            "Id": "cronSchedule"
          }
        ]
      }
    },
    "CronLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CronLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CronEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "Eventfilterdevsourcerule1EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": "pizzaria",
        "EventPattern": {
          "source": [
            "com.pizza.status"
          ]
        },
        "Name": "event-filter-dev-source-rule-1",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "SourceLambdaFunction",
                "Arn"
              ]
            },
            "Id": "event-filter-dev-source-rule-1-target"
          }
        ]
      }
    },
    "SourceEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "SourceLambdaFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "pizzaria",
                    "event-filter-dev-source-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      }
    },
    "Eventfilterdevstatusrule1EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": "pizzaria",
        "EventPattern": {
          "source": [
            "com.pizza.status"
          ],
          "detail-type": [
            "Alteracao Pizza"
          ],
          "detail": {
            "status": [
              "pronto"
            ]
          }
        },
        "Name": "event-filter-dev-status-rule-1",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "StatusLambdaFunction",
                "Arn"
              ]
            },
            "Id": "event-filter-dev-status-rule-1-target"
          }
        ]
      }
    },
    "StatusEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "StatusLambdaFunction"
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "pizzaria",
                    "event-filter-dev-status-rule-1"
                  ]
                ]
              }
            ]
          ]
        }
      }
    },
    "StatusEventSourceMappingSQSEsperaentrega": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": "arn:aws:sqs:us-east-1:732421282977:espera-entrega",
        "FunctionName": {
          "Fn::GetAtt": [
            "StatusLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-event-filter-dev-ServerlessDeploymentBucketName"
      }
    },
    "SourceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SourceLambdaVersionUal2kVOXr4ofWW5bixS1D5SDK1zixivYzMHlYjMgd2Q"
      },
      "Export": {
        "Name": "sls-event-filter-dev-SourceLambdaFunctionQualifiedArn"
      }
    },
    "StatusLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StatusLambdaVersionsPDQGjZkvxhL68Ft2LHKQUCIJJfc7G5VCj5cBhXlHGc"
      },
      "Export": {
        "Name": "sls-event-filter-dev-StatusLambdaFunctionQualifiedArn"
      }
    },
    "CronLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CronLambdaVersionui83lz85Ys6bZ719kfqPHp00W67pPHFUNe8vaMruCZ4"
      },
      "Export": {
        "Name": "sls-event-filter-dev-CronLambdaFunctionQualifiedArn"
      }
    }
  }
}